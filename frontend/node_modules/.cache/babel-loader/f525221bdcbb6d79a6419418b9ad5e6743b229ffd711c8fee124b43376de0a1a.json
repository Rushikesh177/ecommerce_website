{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rushikesh\\\\Desktop\\\\Projects\\\\Ecommerce\\\\frontend\\\\src\\\\Context\\\\ShopContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from \"react\";\nimport all_product from \"../Components/Assets/all_product\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShopContext = /*#__PURE__*/createContext(null);\nconst getDefaultcart = () => {\n  let cart = {};\n  for (let index = 0; index < all_product.length + 1; index++) {\n    cart[index] = 0;\n  }\n  return cart;\n};\nconst ShopContextProvider = props => {\n  _s();\n  const [cartItems, setCartItems] = useState(getDefaultcart());\n  const addToCart = itemId => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: prev[itemId] + 1\n    }));\n    console.log(cartItems);\n  };\n  const removeFromCart = itemId => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: prev[itemId] - 1\n    }));\n  };\n  const getTotalCartAmount = () => {\n    let totalAmount = 0;\n    for (const itemId in cartItems) {\n      const itemQuantity = cartItems[itemId].quantity; // Assuming quantity is stored separately\n      if (itemQuantity > 0) {\n        const itemInfo = all_product.find(product => product.id === Number(itemId));\n        if (itemInfo) {\n          totalAmount += itemInfo.new_price * itemQuantity;\n        }\n      }\n    }\n    return totalAmount;\n  };\n  const contextValue = {\n    getTotalCartAmount,\n    all_product,\n    cartItems,\n    addToCart,\n    removeFromCart\n  };\n  return /*#__PURE__*/_jsxDEV(ShopContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(ShopContextProvider, \"G2BmbW6GxfUQ6OSet62/FrT9VV4=\");\n_c = ShopContextProvider;\nexport default ShopContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ShopContextProvider\");","map":{"version":3,"names":["React","createContext","useState","all_product","jsxDEV","_jsxDEV","ShopContext","getDefaultcart","cart","index","length","ShopContextProvider","props","_s","cartItems","setCartItems","addToCart","itemId","prev","console","log","removeFromCart","getTotalCartAmount","totalAmount","itemQuantity","quantity","itemInfo","find","product","id","Number","new_price","contextValue","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/rushikesh/Desktop/Projects/Ecommerce/frontend/src/Context/ShopContext.jsx"],"sourcesContent":["import React, { createContext , useState} from \"react\";\r\nimport all_product from \"../Components/Assets/all_product\";\r\n\r\n\r\nexport const ShopContext = createContext(null);\r\n\r\nconst getDefaultcart = ()=> {\r\n    let cart = {};\r\n    for (let index = 0; index < all_product.length+1; index++) {\r\n        cart[index] = 0;\r\n        \r\n    }\r\n    return cart;\r\n}\r\n\r\nconst ShopContextProvider = (props) => {\r\n    const [cartItems,setCartItems] = useState(getDefaultcart());\r\n    \r\n    \r\n    const addToCart = (itemId) =>{\r\n        setCartItems((prev)=>({...prev,[itemId]:prev[itemId]+1}));\r\n        console.log(cartItems);\r\n    }\r\n    const removeFromCart = (itemId) =>{\r\n        setCartItems((prev)=>({...prev,[itemId]:prev[itemId]-1}));\r\n    }\r\n\r\n    const getTotalCartAmount = () => {\r\n        let totalAmount = 0;\r\n        for(const itemId in cartItems) {\r\n            const itemQuantity = cartItems[itemId].quantity; // Assuming quantity is stored separately\r\n            if(itemQuantity > 0) {\r\n                const itemInfo = all_product.find(product => product.id === Number(itemId));\r\n                if(itemInfo) {\r\n                    totalAmount += itemInfo.new_price * itemQuantity;\r\n                }\r\n            }\r\n        }\r\n        return totalAmount;\r\n    }\r\n    \r\n\r\n    const contextValue = {getTotalCartAmount,all_product, cartItems,addToCart,removeFromCart};\r\n\r\n    return (\r\n        <ShopContext.Provider value={contextValue}>\r\n            {props.children}\r\n        </ShopContext.Provider>\r\n    )\r\n}\r\nexport default ShopContextProvider;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAGC,QAAQ,QAAO,OAAO;AACtD,OAAOC,WAAW,MAAM,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG3D,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,IAAI,CAAC;AAE9C,MAAMM,cAAc,GAAGA,CAAA,KAAK;EACxB,IAAIC,IAAI,GAAG,CAAC,CAAC;EACb,KAAK,IAAIC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGN,WAAW,CAACO,MAAM,GAAC,CAAC,EAAED,KAAK,EAAE,EAAE;IACvDD,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC;EAEnB;EACA,OAAOD,IAAI;AACf,CAAC;AAED,MAAMG,mBAAmB,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,SAAS,EAACC,YAAY,CAAC,GAAGb,QAAQ,CAACK,cAAc,CAAC,CAAC,CAAC;EAG3D,MAAMS,SAAS,GAAIC,MAAM,IAAI;IACzBF,YAAY,CAAEG,IAAI,KAAI;MAAC,GAAGA,IAAI;MAAC,CAACD,MAAM,GAAEC,IAAI,CAACD,MAAM,CAAC,GAAC;IAAC,CAAC,CAAC,CAAC;IACzDE,OAAO,CAACC,GAAG,CAACN,SAAS,CAAC;EAC1B,CAAC;EACD,MAAMO,cAAc,GAAIJ,MAAM,IAAI;IAC9BF,YAAY,CAAEG,IAAI,KAAI;MAAC,GAAGA,IAAI;MAAC,CAACD,MAAM,GAAEC,IAAI,CAACD,MAAM,CAAC,GAAC;IAAC,CAAC,CAAC,CAAC;EAC7D,CAAC;EAED,MAAMK,kBAAkB,GAAGA,CAAA,KAAM;IAC7B,IAAIC,WAAW,GAAG,CAAC;IACnB,KAAI,MAAMN,MAAM,IAAIH,SAAS,EAAE;MAC3B,MAAMU,YAAY,GAAGV,SAAS,CAACG,MAAM,CAAC,CAACQ,QAAQ,CAAC,CAAC;MACjD,IAAGD,YAAY,GAAG,CAAC,EAAE;QACjB,MAAME,QAAQ,GAAGvB,WAAW,CAACwB,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACC,EAAE,KAAKC,MAAM,CAACb,MAAM,CAAC,CAAC;QAC3E,IAAGS,QAAQ,EAAE;UACTH,WAAW,IAAIG,QAAQ,CAACK,SAAS,GAAGP,YAAY;QACpD;MACJ;IACJ;IACA,OAAOD,WAAW;EACtB,CAAC;EAGD,MAAMS,YAAY,GAAG;IAACV,kBAAkB;IAACnB,WAAW;IAAEW,SAAS;IAACE,SAAS;IAACK;EAAc,CAAC;EAEzF,oBACIhB,OAAA,CAACC,WAAW,CAAC2B,QAAQ;IAACC,KAAK,EAAEF,YAAa;IAAAG,QAAA,EACrCvB,KAAK,CAACuB;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAE/B,CAAC;AAAA1B,EAAA,CAlCKF,mBAAmB;AAAA6B,EAAA,GAAnB7B,mBAAmB;AAmCzB,eAAeA,mBAAmB;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}